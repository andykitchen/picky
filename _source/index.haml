---
title: The Ruby semantic text search engine.
layout: default
---

.container_2
  %h2
    = h page.title
    .social
      <a href="https://twitter.com/hanke" class="twitter-follow-button" data-show-count="false" data-width="110px">Follow @hanke</a>
      <a href="https://twitter.com/picky_rb" class="twitter-follow-button" data-show-count="false" data-width="123px">Follow @picky_rb</a>
      <a href="http://twitter.com/share" class="twitter-share-button" data-url="http://florianhanke.com/picky/" data-text="Picky: The fast Ruby semantic search engine" data-count="none" data-via="hanke" data-width="55px">Tweet</a>
      <div class="g-plusone" data-size="medium" callback="plusone_vote" data-width="60" data-href="http://florianhanke.com/picky/"></div>
      <script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
  .grid_1
    %p
      Picky is a really
      %strong easy to use
      and
      %strong
        %a{ :href => 'enterprise.html#use_case_1' } fast
      Ruby search engine that helps your users
      %strong find what they are looking for.
    %h3 Try a…
    %p
      %ul
        %li
          %a{ :href => 'http://cocoapods.org/?q=cocoa' } A beautiful OS X library search (CocoaPods).
        %li
          %a{ :href => 'http://gemsearch.heroku.com/' } Ruby gems search.
        // %li
        //   Simple
        //   %a{ :href => 'http://picky-simple-example.heroku.com/' } library example
        //   (wait 3 seconds for it to boot up).
        %li
          Japanese-German dictionary (with images):
          = succeed('.') do
            %a{ :href => 'http://wadoku.eu/search/index?utf8=%E2%9C%93&search=wasabi' } WaDoku
        %li
          Telephone book search for Switzerland:
          = succeed('.') do
            %a{ :href => 'http://twixtel.com' } TwixTel online
    %h3 What it is
    %p
      A lightweight
      %a{ :href => 'details.html' } semantic text search engine
      for categorized data, such as varchar fields from a database (probably like most – if not all – data in your application).
    %p
      The
      %a{ :href => 'features.html#server' } standalone server
      offers a HTTP interface returning crispy clean JSON, and a
      %a{ :href => 'features.html#client' } comfortable web front end
      for your application. There's also a
      %a{ :href => 'features.html#statistics' } statistics web app
      and a
      %a{ :href => 'features.html#live' } live interface
      for changing parameters inside the running server.
    %h3 What it is not
    %p
      A search engine for purely uncategorized data (like text from a book).
      It needs mostly categorized, semantic data (like names, or categories, most database fields, anyway) to excel.
    %h3 Where it is
    %p
      Picky lives in a little cave called
      = succeed('.') do
        %a{ :href => 'http://github.com/floere/picky' } The Github Repo
      He usually pays his rent on time.
  .grid_1
    %p
      = succeed(':') do
        %strong Getting started
      Got 5 minutes?
    %p
      %a{ :href => 'getting_started.html' } Install and run Picky with a nice Sinatra interface
    %p
      Got 2 minutes? Run
      %pre
        gem install picky
    %p
      and copy paste
      %code
        %pre.sh_ruby
          :preserve
            require 'picky'
            
            Person = Struct.new :id, :age, :name
            
            data = Picky::Index.new :people do
              category :age, partial: Picky::Partial::None.new
              category :name
            end
            
            data.replace Person.new(1, 34, 'Florian')
            data.replace Person.new(2, 77, 'Floris')
            
            people = Picky::Search.new data
            
            results = people.search '34 flori' # Takes around 0.0001s
            
            p results # For logging
            p results.allocations # => Returns ids, weight etc.
    %h3 Help / Feedback
    %p
      We're always glad for help requests, feedback, single-page scripts, project battle stories:
    %p
      %a{ :href => 'http://groups.google.com/forum/#!forum/picky-ruby' } Share it in the mailing list
    %p
      For quick info updates,
      %a{ :href => 'http://twitter.com/picky_rb' } follow Picky
      on twitter.
    %p
      You might also find excellent Pickyists on IRC in
      %a{ :href => 'http://webchat.freenode.net/' } #picky
      that can also help.
    %p
      %img{ :src => 'http://www.gravatar.com/avatar/de2d64478e715fb02266f77a3f5641f6?size=90' }
      %br/
      This webpage & the images on it have been designed by me,
      %a{ :href => 'http://florianhanke.com' } Florian Hanke
      %a{ :href => 'http://twitter.com/hanke' } @hanke
      aka "Flöre", or "Floere" – if you have personal feedback on anything, I'm pleased to hear it.