var search_data = {"index":{"searchIndex":["object","picky","client","activerecord","convenience","helper","tasks","javascripts","terminal","testclient","add_text()","allocations()","backspace()","cached_interface()","chop_text()","clear_ids()","clear_ids()","configure()","default_configuration()","default_configuration()","default_params()","default_params()","defaultize()","empty?()","entries()","extract_categories()","flush()","ids()","input()","install_trap()","interface()","left()","log()","move_to()","move_to_ids()","new()","new()","new()","new()","populate_with()","remove()","replace()","results()","right()","run()","search()","search()","search()","search_and_write()","search_unparsed()","send_off()","send_search()","send_search()","total()","type_search()","write()","write_ids()","write_results()","readme","readme"],"longSearchIndex":["object","picky","picky::client","picky::client::activerecord","picky::convenience","picky::helper","picky::tasks","picky::tasks::javascripts","picky::terminal","picky::testclient","picky::terminal#add_text()","picky::convenience#allocations()","picky::terminal#backspace()","picky::helper::cached_interface()","picky::terminal#chop_text()","picky::convenience#clear_ids()","picky::terminal#clear_ids()","picky::client::activerecord::configure()","picky::client::default_configuration()","picky::client#default_configuration()","picky::client#default_params()","picky::client::default_params()","picky::client#defaultize()","picky::convenience#empty?()","picky::convenience#entries()","object#extract_categories()","picky::terminal#flush()","picky::convenience#ids()","picky::helper::input()","picky::terminal#install_trap()","picky::helper::interface()","picky::terminal#left()","picky::terminal#log()","picky::terminal#move_to()","picky::terminal#move_to_ids()","picky::client::new()","picky::client::activerecord::new()","picky::terminal::new()","picky::testclient::new()","picky::convenience#populate_with()","picky::client#remove()","picky::client#replace()","picky::helper::results()","picky::terminal#right()","picky::terminal#run()","picky::client#search()","picky::terminal#search()","picky::testclient#search()","picky::terminal#search_and_write()","picky::client#search_unparsed()","picky::client#send_off()","picky::client#send_search()","picky::testclient#send_search()","picky::convenience#total()","picky::terminal#type_search()","picky::terminal#write()","picky::terminal#write_ids()","picky::terminal#write_results()","",""],"info":[["Object","","classes/Object.html","",""],["Picky","","classes/Picky.html","",""],["Picky::Client","","classes/Picky/Client.html","",""],["Picky::Client::ActiveRecord","","classes/Picky/Client/ActiveRecord.html","","<p>An ActiveRecord integration that uses the Picky HTTP client to send index\nupdates back to a Picky server …\n"],["Picky::Convenience","","classes/Picky/Convenience.html","","<p>Use this class to extend the hash that the client returns.\n"],["Picky::Helper","","classes/Picky/Helper.html","","<p>This class provides a few view helpers.\n"],["Picky::Tasks","","classes/Picky/Tasks.html","","<p>Rake tasks for Picky clients.\n"],["Picky::Tasks::Javascripts","","classes/Picky/Tasks/Javascripts.html","","<p>Copies the latest javascripts into the default javascript folder.\n<p>Example:\n\n<pre># Use as follows in your Rakefile. ...</pre>\n"],["Picky::Terminal","","classes/Picky/Terminal.html","","<p>A simple terminal based search.\n"],["Picky::TestClient","","classes/Picky/TestClient.html","",""],["add_text","Picky::Terminal","classes/Picky/Terminal.html#method-i-add_text","(text)","<p>Add the given text to the current text.\n"],["allocations","Picky::Convenience","classes/Picky/Convenience.html#method-i-allocations","()","<p>Returns the allocations.\n"],["backspace","Picky::Terminal","classes/Picky/Terminal.html#method-i-backspace","()","<p>Delete one character.\n"],["cached_interface","Picky::Helper","classes/Picky/Helper.html#method-c-cached_interface","(options = {})","<p>Returns a cached version if you always use a single language.\n"],["chop_text","Picky::Terminal","classes/Picky/Terminal.html#method-i-chop_text","()","<p>Chop off one character.\n"],["clear_ids","Picky::Convenience","classes/Picky/Convenience.html#method-i-clear_ids","()","<p>Removes all ids of each allocation.\n"],["clear_ids","Picky::Terminal","classes/Picky/Terminal.html#method-i-clear_ids","()","<p>Clear the result ids.\n"],["configure","Picky::Client::ActiveRecord","classes/Picky/Client/ActiveRecord.html#method-c-configure","(*attributes)","<p>Takes an array of indexed attributes/methods and options.\n<p>Note: See class documentation for a description. …\n"],["default_configuration","Picky::Client","classes/Picky/Client.html#method-c-default_configuration","(options = {})",""],["default_configuration","Picky::Client","classes/Picky/Client.html#method-i-default_configuration","()",""],["default_params","Picky::Client","classes/Picky/Client.html#method-i-default_params","()",""],["default_params","Picky::Client","classes/Picky/Client.html#method-c-default_params","(options = {})",""],["defaultize","Picky::Client","classes/Picky/Client.html#method-i-defaultize","(params = {})","<p>Merges the given params, overriding the defaults.\n"],["empty?","Picky::Convenience","classes/Picky/Convenience.html#method-i-empty-3F","()","<p>Are there any allocations?\n"],["entries","Picky::Convenience","classes/Picky/Convenience.html#method-i-entries","(limit = 20)","<p>Returns either\n<p>the rendered entries, if you have used #populate_with <em>with</em> a block\n\n<p>OR\n"],["extract_categories","Object","classes/Object.html#method-i-extract_categories","(results)",""],["flush","Picky::Terminal","classes/Picky/Terminal.html#method-i-flush","()","<p>Flush to STDOUT.\n"],["ids","Picky::Convenience","classes/Picky/Convenience.html#method-i-ids","(limit = nil)","<p>Returns the topmost n results. (Note that not all ids are returned with the\nresults. By default only …\n"],["input","Picky::Helper","classes/Picky/Helper.html#method-c-input","(options = {})",""],["install_trap","Picky::Terminal","classes/Picky/Terminal.html#method-i-install_trap","()","<p>Install the Ctrl-C handler.\n"],["interface","Picky::Helper","classes/Picky/Helper.html#method-c-interface","(options = {})","<p>Returns a standard search interface for easy starting.\n<p>… aka scaffolding ;)\n<p>Options:\n"],["left","Picky::Terminal","classes/Picky/Terminal.html#method-i-left","(amount = 1)","<p>Position cursor amount to the left.\n"],["log","Picky::Terminal","classes/Picky/Terminal.html#method-i-log","(results)","<p>Log a search.\n"],["move_to","Picky::Terminal","classes/Picky/Terminal.html#method-i-move_to","(position)","<p>Move cursor to position.\n"],["move_to_ids","Picky::Terminal","classes/Picky/Terminal.html#method-i-move_to_ids","()","<p>Move to the id area.\n"],["new","Picky::Client","classes/Picky/Client.html#method-c-new","(options = {})",""],["new","Picky::Client::ActiveRecord","classes/Picky/Client/ActiveRecord.html#method-c-new","(*attributes)",""],["new","Picky::Terminal","classes/Picky/Terminal.html#method-c-new","(given_uri, id_amount = nil)",""],["new","Picky::TestClient","classes/Picky/TestClient.html#method-c-new","(rack_app, options = {})","<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Picky</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">TestClient</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-constant\">BookSearch</span>, :<span class=\"ruby-identifier\">path</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'/books'</span>)\n</pre>\n"],["populate_with","Picky::Convenience","classes/Picky/Convenience.html#method-i-populate_with","(model_class, options = {})","<p>Populates the ids with (rendered) model instances.\n<p>Give it an AR class and options for the find and it …\n"],["remove","Picky::Client","classes/Picky/Client.html#method-i-remove","(index_name, data)","<p>TODO Rename?\n<p>Parameters:\n\n<pre>* index_name: An index that exists in the Picky server.\n* data: A hash in the ...</pre>\n"],["replace","Picky::Client","classes/Picky/Client.html#method-i-replace","(index_name, data)","<p>TODO Rename?\n<p>Parameters:\n\n<pre>* index_name: An index that exists in the Picky server.\n* data: A hash in the ...</pre>\n"],["results","Picky::Helper","classes/Picky/Helper.html#method-c-results","(options = {})",""],["right","Picky::Terminal","classes/Picky/Terminal.html#method-i-right","(amount = 1)","<p>Position cursor amount to the right.\n"],["run","Picky::Terminal","classes/Picky/Terminal.html#method-i-run","()","<p>Run the terminal.\n<p>Note: Uses a simple loop to handle input.\n"],["search","Picky::Client","classes/Picky/Client.html#method-i-search","(query, params = {})",""],["search","Picky::Terminal","classes/Picky/Terminal.html#method-i-search","(full = false)","<p>Perform a search.\n"],["search","Picky::TestClient","classes/Picky/TestClient.html#method-i-search","(query, params = {})","<p>Wraps the search method to always extend the result with Convenience.\n"],["search_and_write","Picky::Terminal","classes/Picky/Terminal.html#method-i-search_and_write","(full = false)","<p>Perform a search and write the results.\n<p>Handles 404s and connection problems.\n"],["search_unparsed","Picky::Client","classes/Picky/Client.html#method-i-search_unparsed","(query, params = {})","<p>Use this method for live queries – they can pass the JSON string with the\nresults through without parsing. …\n"],["send_off","Picky::Client","classes/Picky/Client.html#method-i-send_off","(request, index_name, data)","<p>Sends a request to the Picky server.\n<p>Note: Data is JSON encoded.\n"],["send_search","Picky::Client","classes/Picky/Client.html#method-i-send_search","(params = {})","<p>Sends a search to the configured address.\n<p>Note: For live queries, parsing is actually not really necessary. …\n"],["send_search","Picky::TestClient","classes/Picky/TestClient.html#method-i-send_search","(params = {})","<p>Backend method that we override to not send a real search.\n"],["total","Picky::Convenience","classes/Picky/Convenience.html#method-i-total","()","<p>Returns the total of results.\n"],["type_search","Picky::Terminal","classes/Picky/Terminal.html#method-i-type_search","(character)","<p>Type the given text into the input area.\n"],["write","Picky::Terminal","classes/Picky/Terminal.html#method-i-write","(text)","<p>Write the text to the input area.\n"],["write_ids","Picky::Terminal","classes/Picky/Terminal.html#method-i-write_ids","(results)","<p>Write the result ids.\n"],["write_results","Picky::Terminal","classes/Picky/Terminal.html#method-i-write_results","(results)","<p>Write the amount of result ids.\n"],["README","","files/lib/picky-client/aux/README.html","","<p>Holds auxiliary files that are not loaded with the rest of the client.\n"],["README","","files/lib/picky-client/spec/README.html","","<p>Holds rspec relevant files that are not loaded with the rest of the client.\n"]]}}